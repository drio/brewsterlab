#!/usr/bin/env python
#
# vim: set ts=4 sw=4 et ft=python:
#
import sys
import shutil
import glob
import os

import markdown2
from jinja2 import Environment, PackageLoader
from jinja2 import FileSystemLoader

def log(msg):
    sys.stdout.write(">> " + msg + "\n")

env = Environment()
env.loader = FileSystemLoader('./templates')

shutil.rmtree("site")
shutil.copytree("public", "site")

def build_page(name, out_file=None, cont=None):
    if not out_file:
        out_file = 'site/%s.html' % name
    log("Building %s." % out_file)

    tmpl = env.get_template('default.html')
    if not cont:
        cont = open('templates/%s.html' % name).read()

    with open(out_file, 'w') as _f:
        _f.write(tmpl.render(content=cont))

def build_people():
    people = "" 

    for p in glob.glob("public/people/*.markdown"):
        html = markdown2.markdown(open(p).read(), extras=["metadata"])
        img_fn = p.replace(".markdown", ".png")

        if not os.path.isfile(img_fn):
            msg = "I cannot find image: " + img_fn
            raise Exception(msg)
        img_fn = img_fn.replace("public/", "")
  
        tmpl = env.get_template('person.html')
        cont = {'name': html.metadata['name'], 'img_fn': img_fn, 'bio': str(html)}
        people = people + "\n" + (tmpl.render(cont))

    return people
    

build_page("home", out_file="site/index.html")
build_page("people", cont=build_people())
build_page("publications")

log("Build completed")
